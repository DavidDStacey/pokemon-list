name: Docker Build and Push

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY_NAME: ${{ secrets.REGISTRY }}
  CLUSTER_NAME: pokemon-list-aks
  CLUSTER_RESOURCE_GROUP: pokemon-list-rg
  NAMESPACE: default

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Azure Container Registry Build
      uses: Azure/acr-build@v1
      with:
        branch: main
        service_principal: ${{ secrets.SP }}
        service_principal_password: ${{ secrets.SP_PASSWORD }}
        tenant: ${{ secrets.SP_TENANT }}
        registry: ${{ secrets.REGISTRY }}
        repository: ${{ secrets.REPOSITORY }}
        image: image
        folder: ./
        dockerfile: ./dockerfile
        
    # Set the target Azure Kubernetes Service (AKS) cluster. 
    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
    
    # Create namespace if doesn't exist
    - run: |
        kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -
    
    # Create imagepullsecret for Azure Container registry (ACR)
    - uses: azure/k8s-create-secret@v1
      with:
        container-registry-url: ${{ env.REGISTRY_NAME }}
        container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
        container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        secret-name: ${{ env.REGISTRY_NAME }}-registry-connection
        namespace: ${{ env.NAMESPACE }}
    
    # Deploy app to AKS
    - uses: azure/k8s-deploy@v1
      with:
        manifests: |
          deploy.yaml
        images: |
          ${{ env.REGISTRY_NAME }}/pokemon/image:${{ github.sha }}
        imagepullsecrets: |
          ${{ env.REGISTRY_NAME }}-registry-connection
        namespace: ${{ env.NAMESPACE }}
